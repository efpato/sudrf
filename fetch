#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys

from page_object import PageObject, PageElement
from page_object.elements import Button, Checkbox, Link, Textbox
from selenium import webdriver
from selenium.webdriver.support.wait import WebDriverWait

import xlsxwriter


class JQuerySelect(PageElement):
    def __set__(self, instance, value):
        if value is None:
            return

        value = str(value).strip()
        if not value:
            return

        self.__get__(instance, instance.__class__)
        instance.webdriver.execute_script(
            """$("%s").val("%s").change();""" %
            (self._locator[1], value))


class SearchPage(PageObject):
    search_tb = Textbox(id="sudrfSearchInput")
    search_btn = Button(id="textSearchButton")
    request_type = JQuerySelect(css="#requestTypeSelector")
    result_list = PageElement(id="resultsList")
    table_view = Link(css="a[value='tableView']")
    in_results = Checkbox(
        xpath="//label[text()='в найденном']/input[@type='checkbox']")
    criminal = Link(partial_link_text="Уголовное дело")
    show = Link(link_text="Показать")

    def wait_for_preloader(self, timeout=30):
        WebDriverWait(self.webdriver, timeout=timeout).until(
            lambda d: d.find_element_by_id("container").is_displayed())

    def wait_for_results(self, timeout=30):
        return WebDriverWait(self.webdriver, timeout=timeout).until(
            lambda d: d.find_element_by_id("resultContainer").is_displayed())

    def pages(self):
        return self.webdriver.find_elements_by_css_selector(
            "table#topPager td.pageNumTD")

    @property
    def results(self):
        def get():
            ret = []
            trs = self.result_list.find_elements_by_xpath(".//table/tbody/tr")
            for tr in trs:
                ret.append([td.text.strip()
                            for td in tr.find_elements_by_tag_name("td")])
            return ret

        res = get()
        for i in range(len(self.pages()))[1:]:
            self.pages()[i].click()
            self.wait_for_results()
            res.extend(get())

        return res


def fetch(name, insurance=True):
    try:
        driver = webdriver.Firefox()
        driver.maximize_window()
        driver.get("https://bsr.sudrf.ru/bigs/portal.html")

        page = SearchPage(driver)
        page.wait_for_preloader()
        page.search_tb = name
        page.request_type = "EXACT"
        page.search_btn.click()

        page.wait_for_results()
        if "Ничего не найдено" in page.result_list.text:
            return

        page.table_view.click()

        if insurance:
            page.in_results = True
            page.search_tb = "страховой"
            page.search_btn.click()
        else:
            page.criminal.click()
            page.show.click()

        page.wait_for_results()
        if "Ничего не найдено" in page.result_list.text:
            return

        return page.results
    finally:
        driver.quit()


def report(name, insurance, criminal):
    workbook = xlsxwriter.Workbook("%s.xlsx" % name)

    sheet0 = workbook.add_worksheet("Страховой")
    sheet0.write(0, 0, "№")
    sheet0.write(0, 1, "Наименование")
    sheet0.write(0, 2, "Аннотация")
    sheet0.write(0, 3, "Вид документа")
    sheet0.write(0, 4, "Дата поступления")
    sheet0.write(0, 5, "Дата решения")
    sheet0.write(0, 6, "Субъект РФ")
    sheet0.write(0, 7, "Наименование суда")
    sheet0.write(0, 8, "Результат")
    for row, data in enumerate(insurance, 1):
        for col, value in enumerate(data):
            sheet0.write(row, col, value)

    sheet1 = workbook.add_worksheet("Уголовный")
    sheet1.write(0, 0, "№")
    sheet1.write(0, 1, "Наименование")
    sheet1.write(0, 2, "Аннотация")
    sheet1.write(0, 3, "Вид документа")
    sheet1.write(0, 4, "Дата поступления")
    sheet1.write(0, 5, "Дата решения")
    sheet1.write(0, 6, "Субъект РФ")
    sheet1.write(0, 7, "Наименование суда")
    sheet1.write(0, 8, "Статья УК РФ")
    sheet1.write(0, 9, "Результат")
    for row, data in enumerate(criminal, 1):
        for col, value in enumerate(data):
            sheet1.write(row, col, value)

    workbook.close()


def usage():
    print('Usage: %s "Фамилия Имя Отчество"' %
          os.path.basename(__file__), file=sys.stderr)
    sys.exit(1)


def main():
    if len(sys.argv) < 2:
        usage()

    name = sys.argv[1]
    report(name, fetch(name), fetch(name, False))


if __name__ == '__main__':
    main()
